Database: to store and manupulate data.

2 types 
SQL  and non SQL

sql is structured query language, eg postgres mysql

non sql is without query ans stores like objects. eg mongo db


postgres: 
relational database management system

sql (ANSI - sandard)
general purpose
object-relational databases
free and open sourced
platform independednd
very stable and minimum maintainance
large storage
extensible define own datatypes ,




in cmd ---> to enter postgres 

psql -U postgres 
password


to create a database 
--> CREATE DATABASE database_name;

to get into database 
--> \c database_name

table creation 
--> CREATE TABLE table_name (fields);

eg : CREATE TABLE work (id INT, name VARCHAR(50));

to show tables in a database
--> \d

to show specific table
--> \d table_name

to delete a table
--> DROP TABLE table_name;


table with constrains 
--> CREATE TABLE table_name (id BIGSERIAL NOT NULL PRIMARY KEY ,name VARCHAR(50) NOT NULL, date_of_birth DATE );

* BIGSERIAL = autoincrement by 1
* NOT NULL  = field not be empty
* UNIQUE    = values in the field must be UNIQUE.

output: 

Schema |       Name       |   Type   |  Owner
--------+------------------+----------+----------
 public | employees        | table    | postgres
 public | employees_id_seq | sequence | postgres

data insertion into tables:
--> INSERT INTO table_name (column_name,,,,) VALUES (data,,,);

INSERT INTO students(name,email) VALUES('shahid','shaahid@example.com')

to see inserted data:
--> SELECT * FROM table_name;

to see specific data:
--> SELECT name,email FROM students;


list by order:
--> SELECT * FROM table_name ORDER BY column_name_to_order_by ASC;

ASC for asenting
DESC decenting ORDER


to avoid repeatation or duplicates when showing data:
--> SELECT DISTINCT column_name FROM table_name;


to add extra column:
--> ALTER TABLE table_name ADD column_name datatype(constrains);

ALTER TABLE students ADD grades INT(NOT NULL);

to update data or add new data:
--> UPDATE table_name SET column_name = 'value' WHERE id IN (1,2,3);  

here id uses to identify which column and in 1,2,3 s datas have being changed to value.ABORT

to fetch data with condition:
--> SELECT * FROM table_name WHERE gender = 'male';

here WHERE keyword is used

to add multiple condition 
--> SELECT * FROM table_name WHERE gender = 'male' AND date_of_birth <= '1999-01-01";

here uses AND keyword with WHERE keyword.ABORT

we can use OR condition to fetch data when one of the condition is true.ABORT

--> relational operators :
>,<,>=,<=,

we can use relational operators in conditions.


